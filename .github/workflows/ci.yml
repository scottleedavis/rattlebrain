# name: CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# env:
#   CARGO_TERM_COLOR: always

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Build
#       run: cargo build --verbose
#     - name: Download and Extract Rattletrap
#       run: |
#         wget -q https://github.com/tfausak/rattletrap/releases/download/14.0.0/rattletrap-14.0.0-linux-x64.tar.gz
#         tar -xzf rattletrap-14.0.0-linux-x64.tar.gz
#         chmod +x rattletrap
#         rm rattletrap-14.0.0-linux-x64.tar.gz

#     - name: Run tests
#       run: cargo test --verbose
name: CI and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose --release

      - name: Run Tests
        run: cargo test --verbose

      - name: Package Binary
        run: |
          mkdir -p release
          cp target/release/rattlebrain release/
          tar -czvf rattlebrain.tar.gz -C rattlebrain

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: rattlebrain.tar.gz

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-binary

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: rattlebrain.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
