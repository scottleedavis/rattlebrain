name: CI and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose --release

      - name: Run Tests
        run: cargo test --verbose

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-and-test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose --release

      - name: Package Binary
        run: |
          mkdir -p release
          cp target/release/rattlebrain release/
          tar -czvf rattlebrain.tar.gz -C release rattlebrain

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: rattlebrain.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
